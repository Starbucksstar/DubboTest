<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.star.dubboprovider.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.star.api.model.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <id column="idno" jdbcType="VARCHAR" property="idno"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="age" jdbcType="TINYINT" property="age"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="sex" jdbcType="BIT" property="sex"/>
    </resultMap>


    <sql id="Base_Column_List">
    id, idno, name, password, age, address, phone, sex
  </sql>

    <select id="selectByPrimaryKey" parameterType="com.star.api.model.UserKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where
        <if test="id!=0">id = #{id,jdbcType=BIGINT}</if>
        <if test="idno!=null">and idno = #{idno,jdbcType=BIGINT}</if>

    </select>

    <delete id="deleteByPrimaryKey" parameterType="com.star.api.model.UserKey">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.star.api.model.User">
    insert into user (id, idno, name, 
      password, age, address, 
      phone, sex)
    values (#{id,jdbcType=BIGINT}, #{idno,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{age,jdbcType=TINYINT}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=BIT})
  </insert>

    <update id="updateByPrimaryKey" parameterType="com.star.api.model.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=TINYINT},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>